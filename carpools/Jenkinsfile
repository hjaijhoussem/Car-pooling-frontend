pipeline {
    agent any
    tools {
        maven '3.9.5'
        nodejs 'nodejs-18'
    }
    environment {
        NEXUS_CREDENTIAL_ID = "nexus"
        NEXUS_URL = 'http://localhost:6666'
        NEXUS_REPO = 'dockerhosted-repo'
        DOCKER_IMAGE_NAME = "car-pooling-fe:${BUILD_ID}"
    }

    stages {
        // stage("checkout code"){
        //     steps {
        //         script {
        //             git branch: 'main', url: 'https://github.com/hjaijhoussem/Car-pooling-frontend.git',  credentialsId: 'github-jenkins'
        //         }
        //     }
        // }

        stage('Parallel jobs') {
            parallel {
                stage('stage1') {
                    steps {
                        script {
                            echo 'job from stage1'
                        }
                    }
                }
                stage('stage2') {
                    steps {
                        script {
                            echo 'job from stage2'
                        }
                    }
                }
            }
        }

        stage('Quality Analysis'){
            steps{
                withSonarQubeEnv('mysonar'){
                   sh """
                    npx sonar-scanner \
                        -Dsonar.projectKey=car-pooling-fe \
                        -Dsonar.projectName=car-pooling-fe \
                        -Dsonar.sources=. \
                    """
                }
            }
        }

        stage('Quality Gate'){
            steps{
                waitForQualityGate abortPipeline: true
            }
        }
        stage('Login to Nexus') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'nexus', usernameVariable: 'NEXUS_USERNAME', passwordVariable: 'NEXUS_PASSWORD')]) {
                        sh "docker login ${NEXUS_URL} -u ${NEXUS_USERNAME} -p ${NEXUS_PASSWORD}"
                    } 
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE_NAME} ./carpools "
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    sh "docker tag ${DOCKER_IMAGE_NAME} localhost:6666/repository/dockerhosted-repo/${NEXUS_REPO}/${DOCKER_IMAGE_NAME}"
                    sh "docker push localhost:6666/repository/dockerhosted-repo/${NEXUS_REPO}/${DOCKER_IMAGE_NAME}"
                }
            }
        }
        stage('Deploy') {
             agent {
                 docker {
                     image 'litmuschaos/ansible-runner'
                     args '-v $PWD:/ansible'
                 }
             }
            environment {
                FRONTEND_IMAGE = "${DOCKER_IMAGE_NAME}"
            }
            steps {
                input message: 'Approve Deployment',
                  parameters: [
                      choice(
                          name: 'Proceed with deployment?',
                          choices: ['Yes', 'No'],
                          description: 'Do you want to deploy the new image?'
                      )
                  ]
                //sh 'docker compose -f ./carpools/docker-compose.yaml up -d'
                sh 'echo local path: ${PWD}'
                sh 'cp -r /var/jenkins_home/workspace/car-pooling-fe@2/* /ansible/'
                sh 'ls /ansible'
                sh 'ansible-playbook /ansible/car-pooling-fe/carpools/deployment/site.yaml -e image_name=car-pooling-fe:4'

            }
        }
    }
}

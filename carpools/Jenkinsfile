pipeline {
    agent any
    tools {
        maven '3.9.5'
        nodejs 'nodejs-18'
        // ansible 'ansible-home'
    }
    environment {
        NEXUS_CREDENTIAL_ID = "nexus"
        NEXUS_URL = 'http://localhost:6666'
        NEXUS_REPO = 'dockerhosted-repo'
        DOCKER_IMAGE_NAME = "car-pooling-fe:${BUILD_ID}"
    }

    stages {
        // stage("checkout code"){
        //     steps {
        //         script {
        //             git branch: 'main', url: 'https://github.com/hjaijhoussem/Car-pooling-frontend.git',  credentialsId: 'github-jenkins'
        //         }
        //     }
        // }

        stage('Parallel jobs') {
            parallel {
                stage('stage1') {
                    steps {
                        script {
                            echo 'job from stage1'
                        }
                    }
                }
                stage('stage2') {
                    steps {
                        script {
                            echo 'job from stage2'
                        }
                    }
                }
            }
        }

        stage('Quality Analysis'){
            steps{
                withSonarQubeEnv('mysonar'){
                   sh """
                    npx sonar-scanner \
                        -Dsonar.projectKey=car-pooling-fe \
                        -Dsonar.projectName=car-pooling-fe \
                        -Dsonar.sources=. \
                    """
                }
            }
        }

        stage('Quality Gate'){
            steps{
                waitForQualityGate abortPipeline: true
            }
        }
        stage('Login to Nexus') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'nexus', usernameVariable: 'NEXUS_USERNAME', passwordVariable: 'NEXUS_PASSWORD')]) {
                        sh "docker login ${NEXUS_URL} -u ${NEXUS_USERNAME} -p ${NEXUS_PASSWORD}"
                    } 
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE_NAME} ./carpools "
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    sh "docker tag ${DOCKER_IMAGE_NAME} localhost:6666/repository/dockerhosted-repo/${NEXUS_REPO}/${DOCKER_IMAGE_NAME}"
                    sh "docker push localhost:6666/repository/dockerhosted-repo/${NEXUS_REPO}/${DOCKER_IMAGE_NAME}"
                }
            }
        }
        stage('Deploy') {
             agent {
                 docker {
                     // image 'litmuschaos/ansible-runner' 
                     image 'hjaiejhoussem/ansible:custom'
                     args '-v $PWD:/ansible'
                 }
             }
            environment {
                FRONTEND_IMAGE = "${DOCKER_IMAGE_NAME}"
                NETWORK_NAME = 'car-pooling'
                SSH_KEY = credentials('ansible-ssh-key')
            }
            steps {
                input message: 'Approve Deployment',
                  // parameters: [
                  //     choice(
                  //         name: 'Proceed with deployment?',
                  //         choices: ['Yes', 'No'],
                  //         description: 'Do you want to deploy the new image?'
                  //     )
                  // ]
                //sh 'docker compose -f ./carpools/docker-compose.yaml up -d''
                sh 'mkdir -p ~/.ssh'
                sh 'echo "${SSH_KEY}" > ~/.ssh/id_rsa'
                sh 'chmod 600 ~/.ssh/id_rsa'
                sh 'cp -r ${PWD}/* /ansible/'
                sh 'ansible-playbook -i /ansible/carpools/deployment/inventory.ini /ansible/carpools/deployment/site.yaml -e image_name=${FRONTEND_IMAGE} -e network_name={NETWORK_NAME}'
                // sh 'echo pwd = ${PWD}'
                // sh 'ls'
                // ansiColor('xterm') {
                //     ansiblePlaybook(
                //         playbook: '/ansible/carpools/deployment/site.yaml',
                //         inventory: '/ansible/carpools/deployment/inventory.ini',
                //         credentialsId: 'ansible-ssh-key',
                //         extraVars: [image_name: '${FRONTEND_IMAGE}'],
                //         colorized: true)
                // }
            }
        }
    }
}
